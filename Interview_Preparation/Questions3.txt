struct ListNode {

int val;
ListNode* next;

ListNode():val(0), next(nullptr) {
}
ListNode(int val): val(val), next(nullptr)
{
}
ListNode(int val, ListNode* next): val(val), next(next) 
{
}
};

class LinkedList
{
createListNode(ListNode **root)
{
if(root == nullptr)
	root = new ListNode(10);
	

}

ListNode* reverseLinkedList(ListNode* root)
{
	if(root == nullptr)
		return nullptr;
		
	ListNode* curr = root;
	ListNode* prev = nullptr;
	ListNode* next = nullptr;
	
	while(curr != nullptr)
	{
		next = curr->next;
		curr->next = prev;
		prev = curr;
		curr = next;
	}
	
	//root = prev;
	return root;
}
};


main()
{

	ListNode *a = nullptr;
	createListNode(&a);
	
	ListNode* node = 100;
	ListNode* reversedList = reverseLinkedList(&head);
	
	
	
}


