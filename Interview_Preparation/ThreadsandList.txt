

map <int, int> data{};
std::mutex mu;
std::condition_variable cb;


writedata1(int key, int value)
{
std::lock_guard<mu> locker;
cb.wait(return ,[](key, value) { map[key] = value};)
locker.unlock();
cb.notify_all();

}

printdata(map<int, int> a)
{
std::lock_guard<mu> locker:
cb.wait([]{
for (int i = 0; i < a.size();i++)
	cout << a[i].second << endl;}
}


std::list<int> ls;

deleteelementfromlist(int d)
{
std::list<int> ::iterator it;

	for(auto it ; it != it.end(); it++)
	{
		if (*it == d)			

}			*it = ls.erase(it);
			if (it != it.end())
				for (;it != it.end();it++)
					
			
			
			
	}
	
	ls